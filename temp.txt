Tell us about a past co-op experience or experience working in the engineering space. What was your experience? What problems were you solving? What tools / languages did you use? Etc.

At my last co-op, I worked at TakingITGlobal, a non-profit organization that builds websites for governments and helps to coordinate various charitable projects. I had the pleasure of working on the RisingYouth site in 2019. I was learning about static site generation using tooling such as Gatsby and Hugo before joining the team, and thus when we were asked to migrate the site from a PHP stack to something more modern, I suggested using an SSG. We settled on using Gatsby, as our team had significant JavaScript and React experience. By utilizing this paradigm, we were able to increase the responsiveness of the site by over 800%, as measured by Google Lighthouse. I also worked to port site functionality into serverless functions, in order to reduce infrastructure costs. I helped migrate the backend over to Firebase Functions, documenting the API with the OpenAPI specification, and setting up CI/CD for the codebase. This significantly improved the developer experience, backend performance and reliability. One significant challenge we ran into while optimizing the site's performance was rebuilding a jQuery-based accessibility toolbox. Using React and Webpack, we designed a modular toolbox that could be imported as an NPM package or integrated into non-React sites. With the blessing of our manager, we were able to open-source the toolbox, which can be found here: https://github.com/TakingITGlobal/a11ize
The following summer, I was tasked with building a dashboard that would replace the existing form-based grant application experience, as well as reimplementation of the legacy PHP-based admin dashboard. We were also tasked with adding new funcionality to this dashboard, including implementing OCR with Amazon Textract, and revision tracking. One of our team members discovered Rails-like JavaScript frameworks, that combined frontend and backend code into one easily deployable monorepo. We examined options including Blitz and Redwood, and settled on Redwood as the API it used was easier to connect to our existing React Native mobile app, while being more mature. One significant issue we encountered was integrating the legacy Airtable database with our app's SQL-based DB. Migrating Airtable over would prove to be infeasible given our time constraints, and there were no suitable tools to perform bidirectional synchronization between SQL and Airtable. Thus, we decided to support both databases, using the Airtable for existing data, and the PosgreSQL database for new functionality.
My experience at TakingITGlobal let me apply the techniques and cutting-edge software I was experimenting with on my own time to a real-world project, as well as allowing me to understand the workflow and requirements of a professional software development company.

Why do you want to work here?

As someone with an interest in FinTech, I've ended up using Wealthsimple's products in the past and been impressed with the products the company has made. I wish to be able to deliver products with similar levels of quality, and hope that working at Wealthsimple will help me cultivate the skills needed to become a better developer. Furthermore, I believe that the experiences and skillset I have would allow me to contribute to the development team at Wealthsimple. I have experience with some of the tools that the team uses, including React, and have no problem learning a new software stack in a limited amount of time. I love challenging myself and finding better ways to build products, and believe that I would be a great fit for the team.